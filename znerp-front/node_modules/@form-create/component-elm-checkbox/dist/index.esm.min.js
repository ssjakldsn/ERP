/*!
 * @form-create/component-elm-checkbox v3.2.8
 * (c) 2018-2024 xaboy
 * Github https://github.com/xaboy/form-create with checkbox
 * Released under the MIT License.
 */
import{defineComponent as e,toRef as t,ref as r,watch as n,createVNode as u,resolveComponent as o,mergeProps as l}from"vue";function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function f(e){return function(e){if(Array.isArray(e))return p(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return p(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return p(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var s=e({name:"fcCheckbox",inheritAttrs:!1,props:{formCreateInject:Object,modelValue:{type:Array,default:function(){return[]}},type:String,input:Boolean,inputValue:String},emits:["update:modelValue","fc.el"],setup:function(e,l){var a=t(e.formCreateInject,"options",[]),i=t(e,"modelValue"),c=t(e,"inputValue",""),p=r(c.value),s=t(e,"input",!1),d=function(e){var t=f(function(e){return Array.isArray(e)?e:[null,void 0,""].indexOf(e)>-1?[]:[e]}(i.value)),r=t.indexOf(p.value);p.value=e,r>-1&&(t.splice(r,1),t.push(e),v(t))};n(c,(function(e){s.value?d(e):p.value=e}));var v=function(e){l.emit("update:modelValue",e)};return{options:function(){return Array.isArray(a.value)?a.value:[]},value:i,onInput:v,updateCustomValue:d,makeInput:function(e){if(s.value)return u(e,{value:p.value||void 0,label:p.value||void 0},{default:function(){return[u(o("ElInput"),{size:"small",modelValue:p.value,"onUpdate:modelValue":d},null)]}})}}},render:function(){var e,t,r,n,a=this,c="button"===this.type?"ElCheckboxButton":"ElCheckbox",f=o(c);return u(o("ElCheckboxGroup"),l(this.$attrs,{modelValue:this.value,"onUpdate:modelValue":this.onInput,ref:"el"}),i({default:function(){return[a.options().map((function(e,t){var r=i({},e),n=r.value,o=r.label;return delete r.value,delete r.label,u(f,l(r,{label:n,value:n,key:c+t+"-"+n}),{default:function(){return[o||n||""]}})})),null===(e=(t=a.$slots).default)||void 0===e?void 0:e.call(t),a.makeInput(f)]}},(r=this.$slots,n=["default"],Object.keys(r).reduce((function(e,t){return n&&-1!==n.indexOf(t)||e.push(r[t]),e}),[]))))},mounted:function(){this.$emit("fc.el",this.$refs.el)}});export{s as default};
